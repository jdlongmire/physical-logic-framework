{"synthetic": false,
 "outputs":
 {"o": ["1052113391409814949"],
  "i": "17267981082504735570",
  "c": "4433184853042026154"},
 "log":
 [{"message":
   ".> LEAN_PATH=C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\.lake\\packages\\Cli\\.lake\\build\\lib\\lean;C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\.lake\\packages\\batteries\\.lake\\build\\lib\\lean;C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\.lake\\packages\\Qq\\.lake\\build\\lib\\lean;C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\.lake\\packages\\aesop\\.lake\\build\\lib\\lean;C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\.lake\\packages\\proofwidgets\\.lake\\build\\lib\\lean;C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\.lake\\packages\\importGraph\\.lake\\build\\lib\\lean;C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\.lake\\packages\\LeanSearchClient\\.lake\\build\\lib\\lean;C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\.lake\\packages\\plausible\\.lake\\build\\lib\\lean;C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\.lake\\packages\\mathlib\\.lake\\build\\lib\\lean;C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\.lake\\build\\lib\\lean c:\\Users\\jdlon\\.elan\\toolchains\\leanprover--lean4---v4.23.0-rc2\\bin\\lean.exe C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\LFT_Proofs\\PhysicalLogicFramework\\LogicField\\ConstraintAccumulation.lean -o C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\.lake\\build\\lib\\lean\\PhysicalLogicFramework\\LogicField\\ConstraintAccumulation.olean -i C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\.lake\\build\\lib\\lean\\PhysicalLogicFramework\\LogicField\\ConstraintAccumulation.ilean -c C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\.lake\\build\\ir\\PhysicalLogicFramework\\LogicField\\ConstraintAccumulation.c --setup C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\.lake\\build\\ir\\PhysicalLogicFramework\\LogicField\\ConstraintAccumulation.setup.json --json",
   "level": "trace"},
  {"message":
   "LFT_Proofs/PhysicalLogicFramework/LogicField/ConstraintAccumulation.lean:138:0: This line exceeds the 100 character limit, please shorten it!\n\nNote: This linter can be disabled with `set_option linter.style.longLine false`",
   "level": "warning"},
  {"message":
   "LFT_Proofs/PhysicalLogicFramework/LogicField/ConstraintAccumulation.lean:176:8: declaration uses 'sorry'",
   "level": "warning"},
  {"message":
   "LFT_Proofs/PhysicalLogicFramework/LogicField/ConstraintAccumulation.lean:250:8: declaration uses 'sorry'",
   "level": "warning"},
  {"message":
   "LFT_Proofs/PhysicalLogicFramework/LogicField/ConstraintAccumulation.lean:251:0: This line exceeds the 100 character limit, please shorten it!\n\nNote: This linter can be disabled with `set_option linter.style.longLine false`",
   "level": "warning"},
  {"message":
   "LFT_Proofs/PhysicalLogicFramework/LogicField/ConstraintAccumulation.lean:312:8: declaration uses 'sorry'",
   "level": "warning"},
  {"message":
   "LFT_Proofs/PhysicalLogicFramework/LogicField/ConstraintAccumulation.lean:364:8: declaration uses 'sorry'",
   "level": "warning"},
  {"message":
   "LFT_Proofs/PhysicalLogicFramework/LogicField/ConstraintAccumulation.lean:452:6: The `cases'` tactic is discouraged: please strongly consider using `obtain`, `rcases` or `cases` instead.\n\nNote: This linter can be disabled with `set_option linter.style.cases false`",
   "level": "warning"},
  {"message":
   "LFT_Proofs/PhysicalLogicFramework/LogicField/ConstraintAccumulation.lean:465:4: The `cases'` tactic is discouraged: please strongly consider using `obtain`, `rcases` or `cases` instead.\n\nNote: This linter can be disabled with `set_option linter.style.cases false`",
   "level": "warning"},
  {"message":
   "LFT_Proofs/PhysicalLogicFramework/LogicField/ConstraintAccumulation.lean:511:10: The `cases'` tactic is discouraged: please strongly consider using `obtain`, `rcases` or `cases` instead.\n\nNote: This linter can be disabled with `set_option linter.style.cases false`",
   "level": "warning"},
  {"message":
   "LFT_Proofs/PhysicalLogicFramework/LogicField/ConstraintAccumulation.lean:548:0: This line exceeds the 100 character limit, please shorten it!\n\nNote: This linter can be disabled with `set_option linter.style.longLine false`",
   "level": "warning"},
  {"message":
   "LFT_Proofs/PhysicalLogicFramework/LogicField/ConstraintAccumulation.lean:590:8: declaration uses 'sorry'",
   "level": "warning"},
  {"message":
   "LFT_Proofs/PhysicalLogicFramework/LogicField/ConstraintAccumulation.lean:685:0: This line exceeds the 100 character limit, please shorten it!\n\nNote: This linter can be disabled with `set_option linter.style.longLine false`",
   "level": "warning"},
  {"message":
   "LFT_Proofs/PhysicalLogicFramework/LogicField/ConstraintAccumulation.lean:689:0: This line exceeds the 100 character limit, please shorten it!\n\nNote: This linter can be disabled with `set_option linter.style.longLine false`",
   "level": "warning"}],
 "inputs":
 [["PhysicalLogicFramework.LogicField.ConstraintAccumulation:deps",
   [["deps",
     [["PhysicalLogicFramework/PhysicalLogicFramework:extraDep",
       [["@PhysicalLogicFramework:extraDep", "1723"]]],
      ["imports",
       [["PhysicalLogicFramework.LogicField.Operator transitive imports (legacy)",
         "875835273225343883"],
        ["PhysicalLogicFramework.LogicField.Operator:importAllArts",
         "3826387155664684845"],
        ["Mathlib.Analysis.SpecialFunctions.Exp transitive imports (legacy)",
         "11238687873220535714"],
        ["Mathlib.Analysis.SpecialFunctions.Exp:importAllArts",
         "9882933541054832800"],
        ["Mathlib.Analysis.SpecialFunctions.Log.Basic transitive imports (legacy)",
         "2399157721521927813"],
        ["Mathlib.Analysis.SpecialFunctions.Log.Basic:importAllArts",
         "2464055733736884161"],
        ["Mathlib.Analysis.SpecialFunctions.ExpDeriv transitive imports (legacy)",
         "11544417622808157994"],
        ["Mathlib.Analysis.SpecialFunctions.ExpDeriv:importAllArts",
         "12404210672309266437"],
        ["Mathlib.Analysis.Calculus.FDeriv.Basic transitive imports (legacy)",
         "18010252263389816344"],
        ["Mathlib.Analysis.Calculus.FDeriv.Basic:importAllArts",
         "5626411285491911525"],
        ["Mathlib.Analysis.Calculus.Deriv.Basic transitive imports (legacy)",
         "17403695491473899656"],
        ["Mathlib.Analysis.Calculus.Deriv.Basic:importAllArts",
         "1968779273366460334"],
        ["Mathlib.Analysis.Calculus.Deriv.Mul transitive imports (legacy)",
         "266858914951088776"],
        ["Mathlib.Analysis.Calculus.Deriv.Mul:importAllArts",
         "412150818234777777"],
        ["Mathlib.Analysis.Calculus.Deriv.Add transitive imports (legacy)",
         "14677122412461720350"],
        ["Mathlib.Analysis.Calculus.Deriv.Add:importAllArts",
         "14646577523974987565"],
        ["Mathlib.Analysis.Calculus.MeanValue transitive imports (legacy)",
         "10420107784225526538"],
        ["Mathlib.Analysis.Calculus.MeanValue:importAllArts",
         "9736598519052921580"],
        ["Mathlib.Data.Real.Basic transitive imports (legacy)",
         "6683729138978161823"],
        ["Mathlib.Data.Real.Basic:importAllArts", "11021404097330920743"]]]]],
    ["libs",
     [["import dynlibs", "1723"],
      ["package external libraries", "1723"],
      ["module dynlibs", "1723"],
      ["module plugins", "1723"]]]]],
  ["Lean 4.23.0, commit ad1a017949674a947f0d6794cbf7130d642c6530",
   "2372534101328293747"],
  ["C:\\Users\\jdlon\\OneDrive\\Documents\\physical_logic_framework\\lean\\LFT_Proofs\\PhysicalLogicFramework\\LogicField\\ConstraintAccumulation.lean",
   "2426230550460555459"],
  ["options",
   [["-DmaxSynthPendingDepth=3", "14379489197236848084"],
    ["-Dweak.linter.mathlibStandardSet=true", "9949955268809796418"],
    ["-DrelaxedAutoImplicit=false", "8404479228809428608"],
    ["-Dpp.unicode.fun=true", "11210593074386665387"],
    ["-DautoImplicit=false", "5369888039164004816"]]],
  ["Module.leanArgs: #[]", "1723"]],
 "depHash": "3014646342937119030"}